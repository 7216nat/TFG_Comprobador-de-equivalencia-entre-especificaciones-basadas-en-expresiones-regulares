package sintactico;

import java_cup.runtime.*;
import lexico.AnalizadorLexico;
import lexico.UnidadLexica;
import errores.ErrorAnalizador;

scan with {: return getScanner().next_token(); :};
parser code {: 
   private ErrorAnalizador errores;
   public void syntax_error(Symbol unidadLexica){
     errores.errorSintactico((UnidadLexica)unidadLexica);
   }
:};
init with {: 
   errores = new ErrorAnalizador();
   AnalizadorLexico alex = (AnalizadorLexico)getScanner();
   alex.fijaGestionErrores(errores);
:};


terminal        AUX, IGUAL, VAR, DEF, ALTER,  ASTERISCO, MAS, INTERR,
                PAP, PCIE, CORAP, CORCIE, GUION, ESCAPESIM, SIM;

non terminal    Pre, Auxs, Aux, Defs, Def, E0, RestE0, E1, RestE1, op1A, 
                E2, E3, E4, E5, E6, RestE12;
                

Pre ::= Auxs Defs ;
Auxs ::= Aux Auxs | ;
Aux ::= AUX VAR IGUAL E0 ;
Defs ::= Def Defs | ;
Def ::= DEF VAR IGUAL E0 ;

E0 ::= E12 RestE0;
RestE0 ::= ALTER E12 RestE0 | ;

E1 ::= E2 RestE1 ;
RestE1 ::= E2 RestE1 | ;

E2 ::= E3 RestE2;
RestE2 ::= op2A RestE2 | ;
op2A ::= ASTERISCO | MAS | INTERR ;

E3 ::= PAP E0 PCIE | E4 ;

E4 ::= CORAP E5 CORCIE | E6;

E5 ::= E6 GUION E6 | E6 ;
E6 ::= ESCAPESIM | SIM | VAR;